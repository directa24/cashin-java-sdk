// Generated by delombok at Fri Jun 19 16:06:14 UYT 2020
package com.directa24.client;

import java.io.IOException;
import java.net.HttpURLConnection;
import com.directa24.exception.Directa24Exception;
import com.directa24.model.deposit.create.CreateDepositRequest;
import com.directa24.model.deposit.create.CreateDepositResponse;
import com.directa24.model.deposit.status.DepositStatusRequest;
import com.directa24.model.deposit.status.DepositStatusResponse;
import com.fasterxml.jackson.databind.ObjectMapper;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class Directa24Client {
   private static final int DEFAULT_CONNECT_TIMEOUT = 30 * 1000;
   private static final int DEFAULT_READ_TIMEOUT = 30 * 1000;
   private int connectTimeout = DEFAULT_CONNECT_TIMEOUT;
   private int readTimeout = DEFAULT_READ_TIMEOUT;
   private String login;
   private String secretKey;
   private String baseUrl;
   private String webUrl;
   private static final OkHttpClient client = new OkHttpClient();
   private static final ObjectMapper mapper = new ObjectMapper();

   public Directa24Client(String login, String secretKey, String baseUrl, String webUrl) {
      this.login = login;
      this.secretKey = secretKey;
      this.baseUrl = baseUrl;
      this.webUrl = webUrl;
   }

   public CreateDepositResponse createDeposit(CreateDepositRequest createDepositRequest) throws Directa24Exception {
      return null;
   }

   public DepositStatusResponse depositStatus(DepositStatusRequest depositStatusRequest) throws Directa24Exception {
      try {
         Request request = new Request.Builder().url(baseUrl + "/v3/deposit/" + depositStatusRequest.getId()).build();
         try (Response response = client.newCall(request).execute()) {
            if (response != null) {
               DepositStatusResponse depositStatusResponse = mapper.readValue(response.body().string(), DepositStatusResponse.class);
               return depositStatusResponse;
            } else {
               throw new Directa24Exception(new Exception("Empty response"));
            }
         }
      } catch (IOException e) {
         throw new Directa24Exception(e);
      }
   }

   @java.lang.SuppressWarnings("all")
   public int getConnectTimeout() {
      return this.connectTimeout;
   }

   @java.lang.SuppressWarnings("all")
   public int getReadTimeout() {
      return this.readTimeout;
   }

   @java.lang.SuppressWarnings("all")
   public String getLogin() {
      return this.login;
   }

   @java.lang.SuppressWarnings("all")
   public String getSecretKey() {
      return this.secretKey;
   }

   @java.lang.SuppressWarnings("all")
   public String getBaseUrl() {
      return this.baseUrl;
   }

   @java.lang.SuppressWarnings("all")
   public String getWebUrl() {
      return this.webUrl;
   }

   @java.lang.SuppressWarnings("all")
   public void setConnectTimeout(final int connectTimeout) {
      this.connectTimeout = connectTimeout;
   }

   @java.lang.SuppressWarnings("all")
   public void setReadTimeout(final int readTimeout) {
      this.readTimeout = readTimeout;
   }

   @java.lang.SuppressWarnings("all")
   public void setLogin(final String login) {
      this.login = login;
   }

   @java.lang.SuppressWarnings("all")
   public void setSecretKey(final String secretKey) {
      this.secretKey = secretKey;
   }

   @java.lang.SuppressWarnings("all")
   public void setBaseUrl(final String baseUrl) {
      this.baseUrl = baseUrl;
   }

   @java.lang.SuppressWarnings("all")
   public void setWebUrl(final String webUrl) {
      this.webUrl = webUrl;
   }

   @java.lang.Override
   @java.lang.SuppressWarnings("all")
   public boolean equals(final java.lang.Object o) {
      if (o == this) return true;
      if (!(o instanceof Directa24Client)) return false;
      final Directa24Client other = (Directa24Client) o;
      if (!other.canEqual((java.lang.Object) this)) return false;
      if (this.getConnectTimeout() != other.getConnectTimeout()) return false;
      if (this.getReadTimeout() != other.getReadTimeout()) return false;
      final java.lang.Object this$login = this.getLogin();
      final java.lang.Object other$login = other.getLogin();
      if (this$login == null ? other$login != null : !this$login.equals(other$login)) return false;
      final java.lang.Object this$secretKey = this.getSecretKey();
      final java.lang.Object other$secretKey = other.getSecretKey();
      if (this$secretKey == null ? other$secretKey != null : !this$secretKey.equals(other$secretKey)) return false;
      final java.lang.Object this$baseUrl = this.getBaseUrl();
      final java.lang.Object other$baseUrl = other.getBaseUrl();
      if (this$baseUrl == null ? other$baseUrl != null : !this$baseUrl.equals(other$baseUrl)) return false;
      final java.lang.Object this$webUrl = this.getWebUrl();
      final java.lang.Object other$webUrl = other.getWebUrl();
      if (this$webUrl == null ? other$webUrl != null : !this$webUrl.equals(other$webUrl)) return false;
      return true;
   }

   @java.lang.SuppressWarnings("all")
   protected boolean canEqual(final java.lang.Object other) {
      return other instanceof Directa24Client;
   }

   @java.lang.Override
   @java.lang.SuppressWarnings("all")
   public int hashCode() {
      final int PRIME = 59;
      int result = 1;
      result = result * PRIME + this.getConnectTimeout();
      result = result * PRIME + this.getReadTimeout();
      final java.lang.Object $login = this.getLogin();
      result = result * PRIME + ($login == null ? 43 : $login.hashCode());
      final java.lang.Object $secretKey = this.getSecretKey();
      result = result * PRIME + ($secretKey == null ? 43 : $secretKey.hashCode());
      final java.lang.Object $baseUrl = this.getBaseUrl();
      result = result * PRIME + ($baseUrl == null ? 43 : $baseUrl.hashCode());
      final java.lang.Object $webUrl = this.getWebUrl();
      result = result * PRIME + ($webUrl == null ? 43 : $webUrl.hashCode());
      return result;
   }

   @java.lang.Override
   @java.lang.SuppressWarnings("all")
   public java.lang.String toString() {
      return "Directa24Client(connectTimeout=" + this.getConnectTimeout() + ", readTimeout=" + this.getReadTimeout() + ", login=" + this.getLogin() + ", secretKey=" + this.getSecretKey() + ", baseUrl=" + this.getBaseUrl() + ", webUrl=" + this.getWebUrl() + ")";
   }
//   private void addHeaders(HttpURLConnection con) {
//      con.setRequestProperty("Content-Type", "application/json");
//   }
}
